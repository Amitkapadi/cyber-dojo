#!/bin/bash

# cyber-dojo first ran as a regular web server with large
# Ubuntu based language images. Its docker_tmp_runner.sh
# file issues the call
#
#      timeout --signal=9 10s ./cyber-dojo.sh
#
# which is in Ubuntu syntax (9=kill signal, 10=10seconds).
#
# The architecture is now docker-in-docker so the web server
# now runs in a docker container based on Alpine-linux and the
# language images are being refactored to smaller Alpine-linux
# based images. Alpine linux is based on TinyCore (not Ubuntu)
# and its timeout command has different syntax
#   [-s  9] vs [--signal=9]
#   [-t 10] vs [10s]
#
#       timeout -s 9 -t 10 ./cyber-dojo.sh
#
# To maintain compatibility in cases where there is an old-style
# (non docker-in-docker) server but the language containers have
# been upgraded to the new smaller Alpine based images I need the
# timeout syntax of docker_tmp_runner.sh to remain Ubuntu based
# (for non upgraded images) and for upgraded Alpine-linux based
# images to work with the Ubuntu syntax. To do this I put this
# adapter into /usr/loca/bin/ which is in the path ahead of
# /usr/bin/ which is where the real timeout lives (which it calls).
# This also allows me to upgrade the language images bit bit
# rather than all in one go. It also means I don't have to keep
# two sets of images in the cyberdojofoundation hub.
#
# This adapter has to be called timeout (no .sh suffix) so it
# needs a #! shebang. To make things even more complicated
# in the docker runner sh file there are two timeout calls...
#
# The outer call:
#      timeout --signal=9       \ $1
#              15s              \ $2
#              docker           \ $3
#              run ...          \
#
# The inner call:
#      /bin/bash -c "timeout --signal=9       \ $1
#                            10s              \ $2
#                           ./cyber-dojo.sh"    $3
#
# The inner timeout needs a [sh -c] or you get an [Exec format error].
# The outer timeout doesn't.
# It's also important to use "$@" and not "$*"
#
# Note this means cyber-dojo.sh files needs to work when run in
#    o) bash in Ubuntu based containers
#    o) bash in Alpine based containers

SIGNAL=${1#*=}
SECONDS=${2%s}
shift
shift

if [ "$@" == "./cyber-dojo.sh" ]; then
  /usr/bin/timeout -s ${SIGNAL} -t ${SECONDS} sh -c "$@"
else
  /usr/bin/timeout -s ${SIGNAL} -t ${SECONDS} "$@"
fi


