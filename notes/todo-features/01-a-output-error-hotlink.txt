
OUTPUT-HOTLINK (7)
    hot key (ALT-E perhaps) causes...
    javascript to matches the output for *first*
      file+line-number in error message (in pattern of output)
    auto opens that file
    scrolls to the line-number.

If there is no error (green/amber) then the
pattern should not match.
Require only that there is an error in the output file.
The pattern matches or it doesn't.
Don't need to have the output file open.

Have each line number be its own targtable link.
Then just scroll into view.
And possibly also highlight the line number?

Sometimes the error message will be for a non-visible file.
Eg C++ templates pointing you to a std library file
that you are misusing. Suggests that the algorithm to
find the error should be to pattern match for all
filename:line-number: (or whatever the pattern is)
and the process those looking for the first filename
that is one of the visible filenames.

Suppose you are doing C++ and you wanted to tinker with
the makefile? In that case you could get an error
with a different pattern from make.
This suggests the option of having a *sequence* of
patterns, which are processed one at a time, as
described above, till a match is made to a visible
file.


In general, it would be nice to capture outputs
from languages as examples of red/amber/green.
Capture of these could be automated!
Then these could be used in tests to verify
the correct colour is pattern matched, and also
to verify the file+line-number pattern.

Similarly it would nice to have fakes for
setting up the FakeDisk/Dir to simulate
what is actually on the disk. For exercises,
and for languages.

