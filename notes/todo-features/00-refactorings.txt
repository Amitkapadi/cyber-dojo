
o) use ramdisk for *all* tests.
   lib first
   app_controllers second
   export CYBER_DOJO_KATAS_ROOT=/mnt/katas
   rework tests so CYBER_DOJO_KATAS_ROOT must be set or it is an error.
   Some tests such as hostdisk tests can always use the ramdisk.

o) delete test code that is now redundant

o) note duplication now in
   test/app_controller/AppControllerTestBase.rb and
   test/lib/LibTestBase.rb

o) rework exercises/ and languages/ caches.
   See comment about not using obvious code
   because some code uses DiskFake
   test/app_models/ ok
   test/app_helpers ok
   test/app_lib  ok
   lib ok
   test/app_controllers ok
   test/languages ?????

o) forker_controller now does not do
     !kata.language.exists?
   instead does
     kat.language.nil?
   can language.exists? be dropped?

o) languages cache has scope for improvement
   the cache could be
     { display_name -> Language object }
   that way the [] indexer can do
   def [](name)
     display_name = new_name(name)
     languages[display_name]
   end
   or
   def [](language_name, test_name)
     languages[display_name(language_name, test_name)]
   end

o) create a new caches folder to go with exercises/ languages/ and katas/
   this will hold exercises.cache languages.cache and
   docker_images.cache
   location set via CYBER_DOJO_CACHES_ROOT
   point this to small ramdisk.

o) app/models/external_parent_chain.rb
   move module_function to top so all a private inside included class.
   If any test does, eg, kata.dir I can instead do disk[kata.path]

o) assuming git running on /mnt/ramdisk/katas is fast enough
   there would appear to be scope to refactor the git class
   so it is passed the folder it is associated with in initialize()
   Then drop path argument from all git methods.

o) cache the result of
   `docker images`
   in the ramdisk to speed up the opening page?
   /mnt/ramdisk/languages/docker_images.cache
   chown www-data:www-data it too
   Do this as part of admin_scripts/pull.sh
   Does this mean RUNNER should have its own env var ROOT?

o) test/app_lib has lots of assertions. Check it.
   It's because of randomness checks. In big loop randomly
   select, eg, an exercise. At end of loop all languages should
   have been selected at least once.

o) in setup_controller.rb
   maybe...
    language = dojo.languages[params['language'] + '-' + params['test']]
   ...becomes...
    language = dojo.languages[params['language'], params['test']]




