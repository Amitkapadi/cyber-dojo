

languages folder/test names can be anything. 
they bear no relation to 
o) display-names (as they appear in setup page)
o) image-names (of docker container)

languages are collected (for setup display)
by iterating through the language/test folders.
their appearance in setup display is governed
by display_name values in the manifest.json files.

When a dojo is create created the display_name
is what is stored in its manifest.json file.
The idea is the display_name
o) is decoupled from physical language folder names
   (eg have test frameworks for different versions of language)
o) is decoupled from image-name
   to allow transparent image-name upgrade (eg when forking)


I'm currently rename mapping from display-name (from dojo's manifest) to folder-name
eg when re-entering. There is a better way.
I could map to new display-name and then search for that display-name
in all the known languages (harvested directly from the folder iteration).
This is better because if there is no match I know there is an error.
Then I'd just get the image-name from that...


-----------
Plan
-----------
1. revert auto-builds back to non-auto-builds. DONE
   don't worry about making URL link
2. restructure languages/folders DONE
   NB. language folder must not have - character in it
   Once/if language folder has its own manifest that
   can set the display_name of the language and the
   test-sub-folder's manifest can set the display of
   the test-name. Or maybe each test should decide both
   the language display name and the test display name
   
3. Split off new domain class, Language[name] -> Language -> Tests[name] -> Test
   dojo.languages['C++'].tests['assert'].path
   create kata from (exercise,test) pair (not exercise,language) pair
   Can always get back to language from test.
   
4. in setup_controller.rb
   maybe...
    language = dojo.languages[params['language'] + '-' + params['test']]
   ...becomes...
    language = dojo.languages[params['language'], params['test']]
   
5. Give each language folder its own manifest to control
   its display name?



Then think about versioning, auto-builds, dojo-time-limits.
Ideally they are separate issues.


Could the version number 
of each language should be part of its folder name?
That way I could have automated builds from the cyberdojo index.
And display names could *choose* whether to show version or not.
That's the key point - to make the display name non-dependent.
Whatever the display-name of a language, a dojo's manifest.json
file has 'language':language.name
and Language.rb name() is 
    display_name.split(',').map{ |s| s.strip }.join('-')
A dojo's manifest will ultimately need two entries
    'language':language.name,
    'test':test.name
Make it simpler and put the renaming-mapping into a 
dedicated class off to the side.


