

=======================

$vagrant up
$vagrant ssh
-$exit

$vagrant ssh
-$
-$sudo docker images
REPOSITORY          TAG                 ID                  CREATED             SIZE
base                latest              b750fe79269d        11 months ago       24.65 kB (virtual 180.1 MB)

-$sudo docker ps -a
NOTHING

-$echo "Hello world" | sudo docker run -i base /bin/bash -c "cat > hello.txt"
-$sudo docker ps -a
ID                  IMAGE               COMMAND                CREATED             STATUS              PORTS
fe4a881a8f16   base:latest         /bin/bash -c cat > h   18 seconds ago     Exit 0
-$sudo docker run base bin/bash -c "ls -al"
DOES NOT LIST hello.txt -
This is because I'm running it off base and not off fe4a88.
And I've now got another container too..

-$sudo docker ps -a
ID                  IMAGE               COMMAND                CREATED              STATUS              PORTS
5550ad34da9a        base:latest         bin/bash -c ls -al     About a minute ago   Exit 0
fe4a881a8f16        base:latest         /bin/bash -c cat > h   3 minutes ago        Exit 0

BUT NOTE THIS FAILS
-$sudo docker run fe4a881a8f16 bin/bash -c "ls -al"

I NEED TO COMMIT AN ID TO AN IMAGE
-$sudo docker commit fe4a881a8f16 base_after_cat
7c3df681ade8

-$sudo docker ps -a
ID                  IMAGE               COMMAND                CREATED              STATUS              PORTS
5550ad34da9a        base:latest         bin/bash -c ls -al     About a minute ago   Exit 0
fe4a881a8f16        base:latest         /bin/bash -c cat > h   3 minutes ago        Exit 0
SAME

$sudo docker images
base_after_cat      latest              7c3df681ade8        29 seconds ago      12.3 kB (virtual 180.1 MB)
node                latest              d8c41048dc9a        5 months ago        293.3 MB (virtual 473.5 MB)
base                latest              b750fe79269d        11 months ago       24.65 kB (virtual 180.1 MB)
base                ubuntu-12.10        b750fe79269d        11 months ago       24.65 kB (virtual 180.1 MB)
base                ubuntu-quantal      b750fe79269d        11 months ago       24.65 kB (virtual 180.1 MB)
base                ubuntu-quantl       b750fe79269d        11 months ago       24.65 kB (virtual 180.1 MB)
SEE NEW IMAGE LISTED FIRST

-$sudo docker run base_after_cat bin/bash -c "ls -al"
NOTE THIS IS NOT run base it is run base_after_cat
NOTE NO NEED FOR -i WHICH INDICATES INTERACTIVE: KEEP STDIN OPEN EVEN IF NOT ATTACHED
NOTE THE -c OPTION TO BASH WHICH MEANS COMMANDS ARE READ FROM STRING
AND THIS LISTS hello.txt   :-)

-$sudo docker ps -a
ID                  IMAGE                   COMMAND                CREATED             STATUS              PORTS
dc669829a01a        base_after_cat:latest   bin/bash -c ls -al     25 seconds ago      Exit 0
5550ad34da9a        base:latest             bin/bash -c ls -al     4 minutes ago       Exit 0
fe4a881a8f16        base:latest             /bin/bash -c cat > h   6 minutes ago       Exit 0

$sudo docker rm fe4a881a8f16
-$sudo docker ps -a
ID                  IMAGE                   COMMAND                CREATED             STATUS              PORTS
dc669829a01a        base_after_cat:latest   bin/bash -c ls -al     25 seconds ago      Exit 0
5550ad34da9a        base:latest             bin/bash -c ls -al     4 minutes ago       Exit 0
-$sudo docker rm 5550ad34da9a dc669829a01a

-$sudo docker ps -a
NONE

-$sudo docker images
base_after_cat      latest              7c3df681ade8        29 seconds ago      12.3 kB (virtual 180.1 MB)
node                latest              d8c41048dc9a        5 months ago        293.3 MB (virtual 473.5 MB)
base                latest              b750fe79269d        11 months ago       24.65 kB (virtual 180.1 MB)
base                ubuntu-12.10        b750fe79269d        11 months ago       24.65 kB (virtual 180.1 MB)
base                ubuntu-quantal      b750fe79269d        11 months ago       24.65 kB (virtual 180.1 MB)
base                ubuntu-quantl       b750fe79269d        11 months ago       24.65 kB (virtual 180.1 MB)
ALL BACK TO SAME AS BEFORE

================================

Usage: docker build [OPTIONS] PATH | URL | -
Build a new container image from the source code at PATH
  -t, --time="": Repository name (and optionally a tag) to be applied
         to the resulting image in case of success.
  -q, --quiet=false: Suppress the verbose output generated by the containers.
  --no-cache: Do not use the cache when building the image.
  --rm: Remove intermediate containers after a successful build

The -t option sets a tag.
The -rm option looks very useful.

docker build  -t TAG - < DockerFile

DockerFile will need to
o) identify the base image. This will depend on
   The language.
   The kata-id
   The avatar
   The tag-number of the traffic-light
   Hmmmm. Having an image per avatar? Or per kata?
   I guess there is no real problem in having a tar.gz file per avatar.
   The untar will simply go into the correct folder for multiple avatars...
   It also makes it possible to filter out avatars with only 1 traffic-light.

Issue instructions to...
o) add new files, and git add     [docker ADD?]
o) delete deleted file, and git rm
o) overwrite changed files (pre git added)
o) run cyber-dojo.sh (in correct dir) and capture output

Now come out of dockerfile.
Use ruby to
o) parse output to determine traffic-light colour
o) update increments.rb file
o) update visible_files.rb file

Then back to docker again
o) add increments.rb file to the container
o) add visible_files.rb file to the container
o) issue a git commit into the container
o) tag the final container (and get rid of intermediate layers)

=========================================
Run some code inside your new sandbox:
$ echo "console.log('Hello World');" | sudo docker run -i node /bin/bash -c "cat > hello.js; node hello.js"
Profit

And that’s all there is to it! You’ve just successfully run arbitrary code in a
safe, secure sandbox. Better still, since it’s based on LXC there are options
for setting resource quotas to limit CPU and Memory usage meaning that denial of
service by resource starvation is now a thing of the past.

Can you limit disk quota?
