
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
install F#
http://fsharp.org/use/linux/

install Rust?
install D?
install Swift?
install Fortran?
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Generalize
   Approval.add_created_txt_files(sandbox.path, visible_files)
   Approval.remove_deleted_txt_files(sandbox.path, visible_files)
from Language.rb so that language manifest can name patterns it
uses to regexp-filter newly created files and regexp-filter
deleted files. These default to nothing - to do nothing.
This could be combined with steps in cyber-dojo.sh to do some
quite powerful things, eg creation of coverage stats which are
then loaded. It creates the possibility of some of these being html
which is loaded and displayed in a textarea replacement.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
I need a basic test for each of the languages under docker.
I think the simplest way to do this is to capture some of
the output from the test-framework and check that when a
[test] actually happens for an animal using a docker'd server
then the captured output is reproduced.
Or, simpler still, just run a test for each language and
check the outcome is red.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
SpyGit is really StubGit
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Lose Exercises.rb
  will mean I need to create a
     spy_exercise(name)
  method. This can have a list of known names of exercises
  that actually exist.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Lose Languages.rb - same as above.
  When Exercises.rb and Languages.rb have gone then only
  katas will have special path handling (for testing) which
  means root_path tweak in application_controller can be
  moved to Dojo.rb
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Would be nice to be able to set ENV variables for
  the root-paths for each of these 3 independently
    o) languages/
    o) exercises/
    o) katas/
  Except that languages/ and exercises/ are readonly
  and so I can just always use the real ones. So only
  need seam for katas/
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Eventually Avatar.tags will contain one entry for each
avatar event (eg file rename) and Avatar.lights will need
to filter Avatar.tags
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
diff-dialog
  if you press a |< >| button and the button becomes
  disabled the cursor should be reset to not-a-hand.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
make diff-dialog a plain page (non-dialog)?
This will enable small dialogs for fork failures.
Issue with this is that it means I cannot (easily)
collapse the revert/fork into the diff-page. So I will
need to keep the revert button on the edit-page.
And only fork will go onto the diff-review page.
A benefit of making diff-review a page is that it will
have more space to display a trail of traffic-lights and
possibly mark on the trail which lights correspond
to the was-tag and now-tag.
What about traffic-lights on the edit/test page?
Do they open a diff-dialog? Perhaps not. Why not have
just the lights on the dashboard page open a new diff page.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Is there a way that a dashboard can record which
lights/animals have had some/all of their lights
diff-reviewed?
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Upgrade test server to latest docker 1.1.1
http://askubuntu.com/questions/472412/how-do-i-upgrade-docker
$ sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 36A1D7869245C8950F966E92D8576A8BA88D21E9
$ sudo sh -c "echo deb http://get.docker.io/ubuntu docker main > /etc/apt/sources.list.d/docker.list"
$ sudo apt-get update
$ sudo apt-get install lxc-docker
Done.
Question
  Do I need to rebuild containers?
  It appears not. Good.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
tests/run_all.sh should save the coverage stats table
into coverage.txt so it is automatically part of git repo.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
test/integration/git_diff_test_view
  has duplication at bottom
  same_line()
  deleted_line()
  added_line()
    helpers added to base?
Also needed in test/app_lib/test_git_diff_html
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  test/app_lib/test_git_diff_builder
  GitDiff::GitDiffParser.new(lines).parse_one
    should be
  GitDiff::Parser.new(lines).parse_one
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Kata.start_avatar
  needs to do dir.lock do...end
  to ensure you don't get two avatars with the same name.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Approval is hard-wired to hard-disk.
Move it to use OsDisk from externals.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Add manifest parameter to app/model/Language.rb globbing
the file pattern to add/remove in post-test event?
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
forker_controller does this
  if !is_tag || tag <= 0 || tag > avatar.lights.count
o) tag > avatar.tags.count
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
katas.exists?(id) could do katas[id] inside a block
and return false from a rescue
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Avatar.valid?(id) should in AvatarS
create Avatars.exists?(name) like Katas.exists?(id)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
I think forker_controller will fail if the exercise
has been renamed. This does not need to be so.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
should katas.each() check inner and outer are comprised only
of hex chars and are correct length?
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
in controllers I do params['id']
If id is not present in params this will be nil
If params['id']==nil is used as part of a string path
the + concatenation will fail.
Eg forker_controller
    kata = dojo.katas[params['id']]
    if !error && !kata.exists?
This will create an Id.new(nil)
which means both
  Id.new(nil).inner
  Id.new(nil).outer
will cause an exception.
Similarly
   a = avatars[params['avatar']]
   a.path
will cause an exception since in
    kata.path + name + '/'
name will be nil.
Note the need to check name isn't "" since that dir would
exist - it would be the kata's dir.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
forker-controller could go straight to the tag existence check
and bypass the kata and avatar check. Would simplify things.
Perhaps do that in a block and in the rescue clause try
to determine a finer-grained error message.
Needs a tags.exists?(tag) function
Or tags[tag].exists? to match current style.
This will need Tag to get the max tag for the avatar.
Add git.max_tag() function?
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
language tests should be run as part of test-suite.
Use admin_scripts/lib_language_manifest_checker.rb
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Move clean(string) code into Dir.read ?
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
spydir.read does this
  content = JSON.unparse(content) if filename === 'manifest.json'
This is wrong. This needs to happen in the caller
Suppose I wanted to fake an actual file of that name.
OsDir.write does this
  file.write(JSON.unparse(object)) if filename.end_with?('.json')
Again, this needs to happen in the caller.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  avatar.traffic_lights(tag = nil)
    This is used with tag != nil only for revert_controller
    (which is itself used in fork-dialog as well as revert-dialog)
    Refactor.
    inc: ==> light:
  this needs to be
      avatar.tags[t].lights
      avatar.tags[t].lights[4]
      avatar.tags[t].lights[4].colour
      avatar.tags[t].visible_files
      avatar.tags[t].visible_files[filename]
      avatar.tags[t].output

  YES. and lights for a tag that is not a *test* event
  eg its a file rename, can simply return the lights for
  the most recent tag that was a *test* event.
  OK. The details. How to do this?
  Currently
  increments.json stores
  [  { colour:'red',
       number:'1',
       time:[2014,6,7,23,11,14]
     }
  ]
  where each entry corresponds to a *test* event.
  $ git shortlog
  lists all the commit tags. So
  irb: `cd dir;git shortlog -s`.to_i
  gets you last current git tag
  And then
     avatar.tags[-1]

  So if there is no [event:==key] then take it to be a test event.
  Otherwise the event is named eg :rename
   colour: for a :rename could be 'previous-red'
  This gives an easy way to create the list of traffic-lights
  by simply filtering all the entries.

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Models all check existence in their ctors.
exists? methods move to container classes
Eg kata.exists? ==> katas.exists?(id)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
rename Dojo.rb to CyberDojo.rb ?
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  application_controller does this...
    def root_path
      Rails.root.to_s + (ENV['CYBERDOJO_TEST_ROOT_DIR'] ? '/test/cyberdojo/' : '/')
    end
  make it so root_path is always set via ENV far from shell?
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  Folders.id_complete can move to Katas.complete(id)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
docker md file
o) adding a new language
   mention creating a sub-folder off languages/ at the start
   so its clear Dockerfile lives off this folder.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  kata.start_avatar
     copy visible_filenames
        # this could also be replaced by
        # kata.language.visible_filenames.each do |filename|
        #   from = path(kata.language) + filename
        #     to = path(avatar.sandbox) + filename
        #   `cp #{from} #{to}`
        #   git_add(avatar.sandbox, filename)
        # end
        # But this would be impossible to mock.
        # It's too imperative.
        # I need to tell the language to copy it visible_files
        # to a given folder (which it is passed) which it
        # does not know is the folder for an avatar's sandbox.
        # This will also remove the dependency on content here.
    copy support_filenames
        # doing a `cp #{from} #{to}` here would mean that
        # once the kata was created it was no longer dependent
        # on the language still being available...
        # Howewever, it would increase the size of .tar.gz files
        # that would get xfer'd to a readonly server.

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  add blurb to start of initial source files explaining that
  the initial source files bare no relation to the exercise?
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  admin_scripts/check_language_manifest.rb
  should be passed the languages/ dir not the root_dir
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  max-duration could be a ctor parameter for DockerRunner
  and not for test()?
  Or is it feasible that the duration could become a parameter
  in a language manifest for example?
  What about tests? Is it simpler to substitute a different
  max-duration as a parameter? I think so.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  test/app_models/test_avatar_test.rb
  has some tests that need reviving.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  kata.avatars['lion'].tag[4]
    handy shortcut for this could be
  kata.lion.tag[4]
    only really useful in testing?
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  There should be a dependency on the language manifest file
  only for startup. Once started a kata should have a *copy* of
  the manifest. Eg, I edit the manifest's highlight_filenames settings
  it should affects only those katas started after the edit.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  add in example of each primitive useable in the unit-test-framework
  chosen. As an example see the starting test code for James' cpputest.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  prune_large.rb and prune_small.rb rework to used Dojo.each function
  Dojo.create_kata(manifest)
    add 2nd parameter specifying format, no default, on call use "rb"
  ...
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  Revert and fork javascript is virtually identical.
  ...
  Can i18n yml files be split?
  ...
  Exception_controller_test.rb needs some assertions!
  ...
  Rename css files,
    eg forker->forker_dialog
    eg reverter->reverter_dialog
    eg diff->diff_dialog
    don't forget to update application.css.scss
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  It would be simpler if output and instructions were not mixed
  into kata.language and avatar.setup did an explicit
  save(kata.exercise.instructions)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  Check for uses of system('x') and `x` that should
  also have an external class representation
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -



In test/installation/one_language_checker.rb
# currently get_filename_42() uses an algorithm to find the
# the file to change to verify red/amber/green status from
# the code-output-parser. This doesn't work for some
# test frameworks such as Ruby-cucumber because they have
# multiple files containing 42.
# Perhaps explicitly pass in the filename containing the 42
# to be peturbed as an argument?

Ensuring cyber-dojo.sh cleans up any processes is messy. Instead of
trying to find children by walking pid/ppid hierarchy it would be
better to use pgid - process group. See lib/Files.rb
Note, if you're running under apache then this never seems to be
a problem - does apache auto clean processes?
-----
Pressing the test button in the browser sometimes creates a new
traffic-light but the output you get back gets stuck and does
not reflect edits made to the files. A work-around when this happens
is to reopen the URL in a new tab.
-----
Do I need to do io_locks? Suppose there is a conflict. Could this
simply mean the git commit fails with a merge conflict? I think
not, since at the moment the avatar/sandbox folder is deleted
before each commit. But if a merge conflict could be created it
would open up the possibility of having multiple players all
playing as the same avatar. There could also be conflicts in the
sandbox where the tests are run. Perhaps that is the place to
check for conflicts?
-----
On my Mac (10.7.4) using Firefox (18.0.1) using a local server
(http://localhost:3000) when you load a file and move the cursor
position using the mouse-pad then the texarea becomes readonly
(and the mac beeps at me)????
Repeatable on the cyber-dojo live server in Firefox.
Doesn't happen on Chrome on my Mac.
Doesn't happen on Safari on my Mac.
Doesn't happen on Opera on my Mac.
Doesn't happen on Jakub's mac using Firefox.
Seems to be a problem local to me.
------------
It would be simpler if output and instructions were not mixed
into kata.language and avatar.setup did an explicit
save(kata.exercise.instructions)
-----
Edit help dialog needs to show fork icon. Or the word fork now that the
  overly subtle fork-icon has been dropped.
-----
The starting test file should explicitly say that the initial code
  is always the same for all exercises and just gives a very simple
  example of how to write a test. It should also explain that the red
  amber green status relies on the test format used so that should not
  be changed. Again be explicit. Eg in the C++ tests using assert it
  should say "the red-amber-green status determination relies on the
  output being the output from assert. So don't change that. Keep using
  assert.
-----
Suppose I record the ip-address of each animal in a dojo and have a
  kata/edit heartbeat that maintains the ip-address timestamp.
  This will allow me to only offer animals to resume-from when those
  animals are not themselves already being used.
  However, this raises the possibility of the following scenario.
  o) laptop1 starts as hippo
  o) laptop1 suspends (eg folds laptop screen down)
  o) laptop2 resumes as hippo (its ip-address now the hippo's)
  o) laptop1 unsuspends, and its heartbeat now detects that
    it is no longer the hippo.
  So not sure I need this.
Hitting fork button brings up dialog box (which will ultimately have
  ability to move files between visible and hidden sections)
-----
in the diff view, long lines no longer get truncated but the scrolled
  into view portion has lost its red/green colouring.
  Also when scrolling, the line numbers
  are scrolled out of view. Ideally, the line numbers would remain
  in place like they do in the main edit-test page.
-----
put a readme.txt file into the kata's root folder explaining
  how to do diffs on the unzipped zip.
-----
add help button (screen cast?) for diff page
-----
add help button (screen cast?) for dashboard page
-----
commonality in dialogs with only ok button? with only cancel button?
-----
make new-file dialog ask for inital name?
-----
isolate make new-file and rename-file dialogs and put into dedicated
  dialog js files.
-----
java-cucumber fails test/installation_tests.rb
-----
The Click-to-revert tip could appear when the current-traffic-light-count
  disappears (and disappear when it reappears). This would also mean
  you don't get the 'Click to revert' tip when there is only one
  traffic-light (which is kind of pointless).
-----
Now that the traffic-lights offer reverting, it makes sense to allow
  you to revert from any traffic-light. Yet only enough to fit on the
  top row are shown. Perhaps the top row can hold all the
  traffic-lights but is auto-scrolled to the far right after the tests
  have finished. And they could be scrollable, even though there is no
  scrollbar. Or maybe simply offer a < > navigation in the revert dialog.
-----
Offer the fork button on the main edit-test page?
-----
I'm not seeing horizontal or vertical scrollbars
  for long lines in Safari
-----
traffic-light tool tips need some tlc
  in particular reverted traffic-lights should mention the
  traffic-light number they themselves reverted to.
  And they don't need to mention 'traffic-lights' - you can
  see they are traffic lights. Maybe say something like
  'deer has hit test 34 times and is currently at green'
-----
the dashboard traps carriage-returns on the secs_per_columns and
  maximum_columns text fields and makes a post call. It could
  parse the text field to verify it is an integer first before
  posting (like the diff page does for the was_tag and now_tag
  text fields)
-----
allow initial manifest.rb setup of initial exercise/language to
  contain subfolders. Do I need this? Could it already be done
  with links?
-----
once a dojo has been created it should be independent of the
  initial language filesets it was created from.
  For example, you should be able to rename a languages sub-folder
  and a dojo created from it before the rename should be ok.
-----
diff-filename-click cycles to the next diff but it loses the
  current red/green toggling states
-----
in diff page when you go back to a file with diff it should not cycle to next
  diff change it should only cycle to next diff change if you click the filename
  when the filename is already selected.
-----
in firefox clicking on the ova hyperlink in the sources dialog doesn't start a download
-----
In lib/CodeOutputParser.rb...
if a player creates a cyber-dojo.sh file which runs two or more
test files then it's possible that the output will contain the
strings denoting red and green traffic-lights. Because of this the
regex's should test for a red traffic-light first, and for
a green traffic-light second.
Also CodeOutputParser.rb with its function parse() should be
renamed based on what it does from the outside rather than
from the inside - namely it simply determines the traffic
light colour. Maybe something like
module TrafficLight
  def self.colour(unit_test_framework, output)
    ...
  end
end
-----
The intention with the installation tests is that they are used to determine
what languages are installed and to only offer those languages (at the create
page). But at the moment all the languages are being offered.
-----
Get Objective-C compiling on Ubuntu ?
http://www.gnustep.org/
-----
