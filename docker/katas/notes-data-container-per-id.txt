
Interesting idea is that there could be *lots* of data-containers.
If I can't volume-mount a sub-folder of katas/... I can achieve
the same effect by breaking the sub-folder into its own data-container.
Someone wanting to practice has their *own* kata-data-container (SINGULAR)

A katas dir on the host could be very large. It certainly
is on cyber-dojo.org  Converting that to a single data-container for all katas
is probably infeasible due to lack of disk space.
One possibility is to keep the existing katas dir on the host but
in a read-only fashion. If someone enters an ID on the host then
that katas/id subfolder is converted into a data-container for that
id only. And then the data-container is used. If someone enters a
new katas ID it creates a data-container from the start.

I like this.

-----------------------------------------
backups
-----------------------------------------
An issue with one data-container per kata-id is backup. How do
I create a single tar file for *all* data-containers?
Will that create the same disk-space issue for cyber-dojo.org?
Perhaps only have creation of single tar from single data-container
for single katas-id. If you want to create a single backup for all
the katas then clone the entire server.



-----------------------------------------
id-completion
-----------------------------------------
Try to find KATA_ID as data-container by looking in /usr/src/cyber-dojo/katas/ (volume-mount)
If found, use it
If not found try to find KATA_ID on host volume by looking in /var/www/cyber-dojo/katas (ro)?
If found, create a data-container from it and use it (delete from host :rw)
Else bad KATA_ID

I want one data-container per kata-id.
[docker ps -a] will be a BIG list!
Is there a filter on [docker ps]?
Yes there is!
    $ docker ps --filter name=X
Will only list containers whose name starts with X. Perfect!
However, when the name of my container is cyber-dojo-katas
then I'm finding
    $ docker ps --filter name=cyber-dojo
Ah this is because I need all to get past the default that only running containers are shown
    $ docker ps --all --filter 'name=cyber-dojo-ka'
And also
    $ docker ps --all --filter 'exited=0' --filter 'name=cyber-dojo'


-----------------------------------------
TODO
-----------------------------------------
1. How to create data-container on the fly
   Maybe copy Dockerfile and .dockerignore into the folder then do it

2. Check that doing two like this means they both show up mounted folder
   /usr/src/cyber-dojo/katas
   And can be globbed for using existing code.



-----------------------------------------
/sandbox mapping
-----------------------------------------

Having one data-container per kata-id and using volumes-from:
Is it possible to map the folder /usr/src/cyber-dojo/katas/49/3A06504A/whale/sandbox
to /sandbox
No
This is important for some language-images, eg F# which does this in their cyber-dojo.sh file
  mono /Packages/NUnit.Runners/tools/nunit-console.exe -nologo /sandbox/RunTests.dll

1. Are there any other languages that name /sandbox?
find . -type f -iname cyber-dojo.sh -print0 | xargs -0 grep "sandbox"
No. Good. Only F#

2. Can I change cyber-dojo.sh for F# to not name the current folder.
Yes
  mono /Packages/NUnit.Runners/tools/nunit-console.exe -nologo /sandbox/RunTests.dll
becomes
  mono /Packages/NUnit.Runners/tools/nunit-console.exe -nologo ./RunTests.dll


-----------------------------------------
diffs
-----------------------------------------
to see the diff for a kata-id the git repo needs to be available.
If there is a single data-container per kata-id
then this will need to be mounted on the fly in a docker run command.
I think this means katas will need to be a service in its own right.
Or the web container will need to do a [docker run] on its own image
but with a volumes-from for the data-container!



-----------------------------------------
exercises/languages caches
-----------------------------------------
Perhaps these should live in their respective folders and not in app/caches
Things that change together should live together.
Make image-container for languages and store the cache inside the image.
Same for exercises.
Then they can be readonly. Can you make a readonly data-container? Yes.
volumes_from:
 - container_name:ro
 - container:container_name:ro


-----------------------------------------
testing
-----------------------------------------
test_external_helpers.rb does this
    # we never want tests to write to the real katas root
    set_katas_root(tmp_root + 'katas')
Need to think about how this will work when each kata-id
has its own data-container.




