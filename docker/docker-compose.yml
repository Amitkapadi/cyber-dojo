
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# 1. ensure you have the app images
#    $cd docker && ./pull-all.sh
#
# 2. get the language images you want
#    $docker pull cyberdojofoundation/gcc_assert
#
# 3 ensure port 80 is open
#
# On Debian Jessie
# 4. $cd docker && docker-compose -f debian-jessie.yml up
#
# On Ubuntu 14.04
# 4. $cd docker && docker-compose -f ubuntu-14.04.yml up
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# note the tmp data container name must match
# the name used in lib/docker_runner.sh
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

nginx:
  image: cyberdojofoundation/nginx
  links:
    - "web:cyberdojo_web"
  ports:
    - "80:80"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

web:
  image: cyberdojofoundation/web
  volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - /usr/bin/docker:/usr/bin/docker
    - /var/www/cyber-dojo/katas:/var/www/cyber-dojo/katas:rw
  volumes_from:
    - exercises:ro
    - languages:ro
    - tmp:rw
  ports:
    - "3000:3000"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

languages:
  image: cyberdojofoundation/languages
  entrypoint: /bin/sh

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

exercises:
  image: cyberdojofoundation/exercises
  entrypoint: /bin/sh

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

tmp:
  image: cyberdojofoundation/tmp
  entrypoint: /bin/sh
  container_name: cyberdojo_tmp_data_container
