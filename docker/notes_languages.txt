
Checking languages work with new dind server

Checked and OK (can create kata and tes to get red)
--------------
YES gcc_assert
YES csharp_nunit  (with usermod tweak, see docker_tmp_runner.sh)
YES java_junit
YES nasm_assert
YES php_phpunit
YES python_pytest
YES groovy_junit
YES go_testing
YES d_unittest
YES visual-basic_nunit
YES fsharp_nunit  (with TMP_DIR -> /sandbox tweak, see docker_tmp_runner.sh)


? javascript-node_jasmine

NO ruby_cucumber  - Controller failure?!
NO ruby_rspec     - Controller failure?!
NO ruby_mini_test - Controller failure?!
NO ruby_test_unit - Controller failure?!
All the same failure
uninitialized constant KataController::StringCleaner ?
app/controllers/kata_controller.rb:47:in `<class:KataController>'
app/controllers/kata_controller.rb:2:in `<top (required)>'

Doesn't happen on other languages?!
This is very odd indeed. The web container is failing at
a basic rails level if I try to create a kata from
ruby languages but not from others. I don't understand.
Furthermore, ruby_mini_test was definitely not doing
that a few days ago. Or was it ruby_test_unit. It was one of them.
I think it was before I moved some dirs under app/
Eg caches, languages, exercises, caches, katas (not test)

Get to "Your animal is a toucan".
Click OK. You get the KataController::StringCleaner failure.
Is the docker-machine setup on OSX Docker-Quickstart-Terminal
doing some fuse-mounting of my local disk onto default
and that is somehow getting volume-mounted inside the rails image?
Seems very unlikely.
$ docker-machine ssh default ruby --version
Nope ruby is not on default.
What happens when you click "toucan" [ok]
startDialog()
    var url = '/kata/edit/' + id + '?avatar=' + avatarName;
    var okOrCancel = function() {
      window.location.href = cd.homePageUrl(id);
      window.open(url);
    };
Hmmm. Set href and do .open(url) ?




I think the simplest option may be to rewind to an earlier
commit and find somewhere that ruby_test_unit/ruby_mini_test
works and then move forward.


