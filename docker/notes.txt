
Checking languages work with new dind server

Checked and OK (can create kata and tes to get red)
--------------
YES gcc_assert
YES csharp_nunit  (with usermod tweak, see docker_tmp_runner.sh)
YES java_junit
YES nasm_assert
YES php_phpunit
YES python_pytest
YES groovy_junit
YES go_testing
YES d_unittest
YES visual-basic_nunit
YES fsharp_nunit  (with TMP_DIR -> /sandbox tweak, see docker_tmp_runner.sh)


? ruby_cucumber
? javascript-node_jasmine

NO ruby_rspec     - Controller failure?!
NO ruby_mini_test - Controller failure?!
NO ruby_test_unit - Controller failure?!
uninitialized constant KataController::StringCleaner ?
app/controllers/kata_controller.rb:47:in `<class:KataController>'
app/controllers/kata_controller.rb:2:in `<top (required)>'

Doesn't happen on other languages?!
This is very odd indeed. The web container is failing at
a basic rails level if I try to create a kata from
ruby languages but not from others. I don't understand.
Furthermore, ruby_mini_test was definitely not doing
that a few days ago. Or was it ruby_test_unit. It was one of them.
I think it was before I moved some dirs under app/
Eg caches, languages, exercises, caches, katas (not test)

Get to "Your animal is a toucan".
Click OK. You get the KataController::StringCleaner failure.
Is the docker-machine setup on OSX Docker-Quickstart-Terminal
doing some fuse-mounting of my local disk onto default
and that is somehow getting volume-mounted inside the rails image?
Seems very unlikely.
$ docker-machine ssh default ruby --version
Nope ruby is not on default.

I think the simplest option may be to rewind to an earlier
commit and find somewhere that ruby_test_unit/ruby_mini_test
works and then move forward.









Does pull.sh still do an image update check?
It still calls caches/refresh_all.sh *after* the git pull.
So refresh_all could be updated to reinstate the image update.

There is a --tmpfs option on docker run. Look into that.
https://docs.docker.com/engine/userguide/containers/dockervolumes/ (look for :z)

volume mount has ro,rw and also other options, eg z for sharing.
https://docs.docker.com/engine/userguide/containers/dockervolumes/ (look for z option)

TODO:

katas
1. Make cyber-dojo script auto-probe for/var/www/cyber-dojo/app/katas
   and if it finds it use that as katas home.

2. ????? Where to have katas default to when /var/www/cyber-dojo/app/katas not detected


0. create name for web container so its easy to refer to in cdf/cyber-dojo scripts
0. create names for ALL cdf containers so they can be filtered
0. tidy up .gitignore - follow .dockerignore model, ignore everything, except....
0. Move coverage/ out of root?
0. Move docker/ out of root?
0. Move zips/ out of root?
0. investigate docker run --tmpfs for web container
0. set prompt to display hostname inside web container
   This is tricky. Can create a .profile by adding this line to Dockerfile
   RUN echo 'export PS1="[\u@docker] \W # "' >> /root/.profile
   But how to run it?
   Can't see a way to add it to web:command
   Can't see a way to add it to docker exec -it docker_web_1 sh
0. Put languages/ into ro:data-container?
0. Put exercises/ into ro:data-container?
0. Put test/ into data-container?


1. Edit/drop? pull.sh
2. Fix dashboard download
3. Merge

0. On old blog pages add links to new blog pages and say old pages are deprecated.
1. Add new blog page on installing dind server.
2. Info on installing in Windows
3. Info on installing on OSX
7. Live
8. Alpine base for common languages?


Also, multiple logs... suggests
    cyber-dojo logs_rails
    cyber-dojo logs_web
    cyber-dojo logs_nginx
