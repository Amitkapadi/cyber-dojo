
Notes

0. Getting rsync-daemon to auto start when server boots up
   https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=764616

1. Problem with using git-daemon to serve katas/ files to docker container is
   git-clone does not (easily) preserve file date-time-stamps.
   Also I don't need the .git folder I only need avatar/sandbox

2. When compute nodes are distributed, the create page will
   need reworking to determine what images are available.
   Can a docker-swarm solution do this?
   An ssh solution can!
   Simply run [ssh .... docker images] and collect the output

3. Thinking about round-tripping, could the rsync-daemon
   on the server accept an rsync call *back* to it from the
   docker-container? This would then allow a second git-commit
   on the main git repo, and new files could be fed back to the
   browser. Would allow Approval/Mutation style tests and as
   well as coverage files.

4. cyberdojofoundation/build-essential
   has rsync in it. Fortunate!
   
5. Digital-Ocean nodes built from Docker app are 1.8+
   and have full cgroup facilities for limiting eg memory :-)

6. http://linux.about.com/library/cmd/blcmdl5_rsyncd.conf.htm
   For rsyncd man/options
   http://linux.about.com/library/cmd/blcmdl1_rsync.htm
   For rsync man/options


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Rough notes now below are now captured in 
  admin_scripts/rsync-daemon/etc_rsyncd.conf
  admin_scripts/rsync-daemon/etc_rsyncd.secrets
  admin_scripts/rsync-daemon/setup_rsync.sh
  lib/DockerRsyncRunner.rb
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


1) don't need 873 open on Turnkey
2) /etc/rsyncd.secrets has to be owned by root
3) hosts allow = 172.17.0.0/255.255.0.0
4) check log via [cat /var/log/rsyncd.log]
5) reboot via [/etc/init.d/rsync restart]


Ok. This gives a new DockerRunner that avoid volume-mounting.
I could actually install that on cyber-dojo.org now as part
of the migration.

The next step would be to create a new DockerRunner that
"federates" the docker-run calls to several docker-nodes. 
I could use docker-swarm for this. However
I can only go to docker 1.6 on the current cyber-dojo.org 
server. Another option is simply to ssh to the nodes.
How would this work?
I would create a new user and allow www-data to sudo as that user. 
That user would then setup ssh credentials and ssh-copy-id
them to the nodes. It would then the ability to ssh into the nodes.
Further, I could set a firewall and only allow SSH
into the docker-nodes from cyber-dojo.org's IP address.

DockerHostRsyncRunner
DockerSshRsyncRunner







