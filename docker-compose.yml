# 1. pull the cyberdojofoundation images for languages you want
# 2. docker-compose build --no-cache
# 3. docker-compose up
# Don't forget to ensure port 80 is open


nginx:
  build: .
  dockerfile: ./docker/nginx_image/Dockerfile
  ports:
    - "80:80"
  links:
    - "web:cyberdojo_web"


# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# For info on the apparmour volume mount fix see
# https://github.com/SvenDowideit/dockerfiles/issues/17
#
# For running on a debian-jessie server after installing docker
# and docker-compose as per instructions on Docker web pages you need
#    - /usr/lib/x86_64-linux-gnu/libapparmor.so.1.2.0:/usr/lib/x86_64-linux-gnu/libapparmor.so.1
#
# For running on an Ubuntu 14.04 server the apparmor version is
# different and the volume mount needs to be
#    - /usr/lib/x86_64-linux-gnu/libapparmor.so.1.1.0:/usr/lib/x86_64-linux-gnu/libapparmor.so.1
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

web:
  build: .
  dockerfile: ./docker/web_image/Dockerfile
  volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - /usr/bin/docker:/usr/bin/docker
    - /usr/lib/x86_64-linux-gnu/libapparmor.so.1.2.0:/usr/lib/x86_64-linux-gnu/libapparmor.so.1
    - /var/www/cyber-dojo/katas:/var/www/cyber-dojo/katas:rw
  volumes_from:
    - exercises:ro
    - languages:ro
    - tmp:rw
  ports:
    - "3000:3000"



# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# data-containers
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

exercises:
  image: cyberdojofoundation/exercises
  entrypoint: /bin/sh
  container_name: cyber-dojo-exercises-data-container

languages:
  image: cyberdojofoundation/languages
  entrypoint: /bin/sh
  container_name: cyber-dojo-languages-data-container

tmp:
  image: cyberdojofoundation/tmp
  entrypoint: /bin/sh
  container_name: cyber-dojo-tmp-data-container
