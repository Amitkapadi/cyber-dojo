
MAJOR
-----
The design of cyber-dojo is very heavy on inodes. You will
almost certainly run out of inodes before running out of
disk space. I need an automated process that moves dojos that have
a minimum number of traffic lights and are at least 10 days
old (say) onto a separate server (or at the very minimum
into a separate folder on the same server.
-----
Sandboxes could be retained across run-test submissions.
This would allow, for example, incremental makes.
I could do this my making the sandboxes/ subfolder be simply the
dojo id concatenated with the animal name. Of course the sub-folder
would not be deleted. This would mean I would need to move the sandboxes
folder onto the large partition on cyber-dojo.com
I would also need some kind of harvester that reclaimed old sandboxes.
However, that would be easy - if sandboxes/X exists but katas/X does
not (eg because it has been pruned) then I can delete sandboxes/X
-----
Ensuring cyber-dojo.sh cleans up any processes is messy. Instead of
trying to find children by walking pid/ppid hierarchy it would be
better to use pgid - process group. See lib/Files.rb
Note, if you're running under apache then this never seems to be
a problem - does apache auto clean processes?
-----
The Diff view doesn't work properly in IE8.
-----



MINOR
-----
I'm contemplating changing the coding-page so that clicking
on a traffic-light reverts you to the files from
that traffic-light (rather than bringing up a diff page).
Of course I'd still want to be able to go to the diff page too
but perhaps that could be from the traffic-light next to the
animal image. I think revert might be particuarly useful for kids.
-----
add help button on diff page
add help button on dashboard page
-----
the diff-view would benefit from showing deleted files.
Also, if a diff-view file has all new green lines perhaps
  the filename should appear green in the filelist.
  Similarly, perhaps the filename of all deleted red lines
  should appear in red.
-----
allow initial manifest.rb setup of initial exercise/language to
  contain subfolders.
-----
once a dojo has been created it should be independent of the
  initial exercise and language filesets it was created from.
  For example, you should be able to rename a languages sub-folder
  and a dojo created from it before the rename should be ok.
-----
the use of the sandbox folder under the animals folder could probably be dropped
  now that the execution of cyber-dojo.sh happens in a dedicated separate sandbox folder
-----
sort filenames so filenames with no . in them are grouped together
  and filenames with one or more . in them are grouped together?
sort filenames so files with the same extension are grouped together?
-----
upon start-coding the server could run cyber-dojo.sh and open the output file in the editor?
  certainly I don't want the output file as the one opened at the start and its empty
-----
diff-filename-click cycles to the next diff but it loses the current red/green toggling states
-----
in diff page when you go back to a file with diff it should not cycle to next diff change
  it should only cycle to next diff change if you click the filename when the
  filename is already selected. 
-----
in firefox clicking on the ova hyperlink in the sources dialog doesn't start a download
-----
In lib/CodeOutputParser.rb...
if a player creates a cyber-dojo.sh file which runs two or more
test files then it's possible that the output will contain the
strings denoting red and green traffic-lights. Because of this the
regex's should test for a red traffic-light first, and for
a green traffic-light second.
Also CodeOutputParser.rb with its function parse() should be
renamed based on what it does from the outside rather than
from the inside - namely it simply determines the traffic
light colour. Maybe something like
module TrafficLight
  def self.colour(unit_test_framework, output)
    ...
  end
end
-----
the various uses of eval in the code could do with being replaced with
a json parse.
-----
The intention with the installation tests is that they are used to determine
what languages are installed and to only offer those languages (at the create
page). But at the moment all the languages are being offered.
-----
The javascript tests need some TLC.
-----
