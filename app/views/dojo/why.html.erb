
<table>
<tr>
<td>

Several years ago I took part in a coding dojo in the
Scotsman pub in Oslo. There were about 25-30 people split
into six groups, all doing the Battleships kata.
At the end of the dojo I was struck by a few thoughts:

<br/>
<br/>

<div>
  &bull;&nbsp;Several groups took a <em>long</em> time to get started,
  installing compilers and whatnot.
<div class="panel">  
I wondered what the minimum install could be for a dojo. 
I realized it was nothing. Nada. Zero. Zip. You could write your code and tests inside a 
web browser and run the test on a server. 
The more I thought about this idea the more I liked it.
In particular, I liked the idea of participants using something 
that was so obviously <em>not their normal development environment</em>.
I felt this would help strongly reinforce the idea that in a dojo
you should <em>not</em> be doing normal development.
</div>
</div>

<div>
  &bull;&nbsp;There was no repetition.
<div class="panel">
When you're coding in a code dojo you should <em>not</em> be thinking
about completing the task;
you should be thinking about <em>improving some aspect of your skill</em>.
This is easier said than done. 
Coding is hard. 
Repeating the practice helps you to free up some spare mental capacity.
Repeating the practice helps you to break out of your default
completion mindset and into a practice/improvement mindset.
</div>
</div>

<div>
  &bull;&nbsp;There was no collaboration across groups.
<div class="panel">
There was a very strong unwritten rule that members of a group should
not interrupt members of other groups.
I find this very interesting.
It seems to be a strong reflection of the under-emphasis on the
social aspects of software development.
I started to sense some of the social possibilities that coding in a browser could
bring to a dojo, in particular, the idea of treating all the participants as a single team.
</div>
</div>

</td>
</tr>
</table>



