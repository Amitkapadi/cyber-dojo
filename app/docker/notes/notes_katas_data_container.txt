
If katas is a (linked) data-container I can control its rights in its Dockerfile.
I can't restrict access to katas/ sub-folder but I don't need to.
I don't need to for katas-runner either (assuming I tar files both ways)

What about the one-time *creation* of the data-container?
That's ok too since I'm copying them. Just need read-access.

The data-container can be made FROM the web container.
This will ensure it has the same cyber-dojo user.
Does it increase the data-container size? Read this just recently.
Using Docker, p54
Or use base image with cyber-dojo user?


- - - - - - - - - - - - - - - - - - - - - - - - - - - -
Maybe have two yml files?
use COMPOSE_FILE env-var and not -f
$ docker-compose -f cyber-dojo-docker-compose.yml up -d
vs
$ COMPOSE_FILE=cyber-dojo-docker-compose.yml
$ docker-compose up -d
This is nice in that the CYBER_DOJO_RUNNER_CLASS will also be
different and that can be embedded inside the yml files.

  katas-data-container:
    Where cyber-dojo-katas is *not* a service in this yml file. It's created
    externally. It has a different lifetime to the services in the yml file.
    web:
      environment:
        - CYBER_DOJO_RUNNER_CLASS=DockerTmpRunner
      volumes_from: cyber-dojo-katas

  katas-volume-mount.yml
    Needs to be writable by cyber-dojo user as identified on the *host*.
    Solution James will need.
    web:
      environment:
        - CYBER_DOJO_RUNNER_CLASS=DockerKatasRunner
       volumes:
          - ${KATAS_DIR}:${CYBER_DOJO_KATAS_ROOT}:rw

