#!/bin/sh
set -e

# TODO: KATAS=arg   has to be processed and volume-mounted for docker-run
#                   so ruby file's docker commands can access the host's katas folder.
#
#
#
# TODO: add command to backup katas-data-container to tar.tgz file
#       See end of https://docs.docker.com/engine/userguide/containers/dockervolumes/#manage-data-in-containers
#       Should be able to use this technique to create the initial
#       full data-container (new server on top of old one)
# TODO: check this script works if called from any drectory
# TODO: create katas-DATA-CONTAINER only if RUNNER=DockerKatasDataContainerRunner?
# TODO: pull all language images == fetch? all?

#set +o errexit
#X=$(docker ps -a | grep cdf-katas-DATA-CONTAINER)
#STATUS=$?
#set -o errexit

ME="./$( basename ${0} )"
MY_DIR="$( cd "$( dirname "${0}" )" && pwd )"

GITHUB_URL=https://raw.githubusercontent.com/JonJagger/cyber-dojo/master/docker

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# install docker if necessary

hash docker 2> /dev/null
if [ $? != 0 ]; then
  echo
  echo 'cyber-dojo is installing docker'
  SCRIPT=install-docker.sh
  curl -O ${GITHUB_URL}/${SCRIPT}
  chmod +x ${SCRIPT}
  ./${SCRIPT}
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# install docker-machine if necessary

hash docker-machine 2> /dev/null
if [ $? != 0 ]; then
  echo
  echo 'cyber-dojo is installing docker-machine'
  SCRIPT=install-docker-machine.sh
  curl -O ${GITHUB_URL}/${SCRIPT}
  chmod +x ${SCRIPT}
  ./${SCRIPT}
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# install docker-compose if necessary

hash docker-compose 2> /dev/null
if [ $? != 0 ]; then
  echo
  echo 'cyber-dojo is installing docker-compose'
  SCRIPT=install-docker-compose.sh
  curl -O ${GITHUB_URL}/${SCRIPT}
  chmod +x ${SCRIPT}
  ./${SCRIPT}
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# you must have the docker-compose.yml file

DOCKER_COMPOSE_FILE=docker-compose.yml
DOCKER_COMPOSE_CMD="docker-compose --file=./${DOCKER_COMPOSE_FILE}"

if [ ! -e ${MY_DIR}/${DOCKER_COMPOSE_FILE} ]; then
  CWD=$(pwd)
  cd "${MY_DIR}" > /dev/null
  curl -O ${GITHUB_URL}/${DOCKER_COMPOSE_FILE}
  cd "${CWD}" > /dev/null
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# docker-compose.yml relies on several exported env-vars

RUNNER_DEFAULT=DockerTarPipeRunner
RUNNER=${RUNNER_DEFAULT}         # see app/models/dojo.rb
HOME=/usr/src/cyber-dojo         # home folder *inside* the server image

export CYBER_DOJO_HOME=${HOME}
export CYBER_DOJO_KATAS_ROOT=${HOME}/katas
export CYBER_DOJO_KATAS_CLASS=HostDiskKatas
export CYBER_DOJO_RUNNER_CLASS=${RUNNER}
export CYBER_DOJO_RUNNER_SUDO='sudo -u docker-runner sudo'
export CYBER_DOJO_RUNNER_TIMEOUT=10


# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# delegate to ruby script inside web image

docker run \
  --rm \
  --user=cyber-dojo \
  cyberdojofoundation/web \
  sh -c "./app/docker/cyber-dojo.rb $@"


if [ "$*" == "down" ]; then
  CWD=$(pwd)
  cd "${MY_DIR}" > /dev/null
  ${DOCKER_COMPOSE_CMD} down
  cd "${CWD}" > /dev/null
fi

if [ "$*" == "up" ]; then
  CWD=$(pwd)
  cd "${MY_DIR}" > /dev/null
  ${DOCKER_COMPOSE_CMD} up -d
  cd "${CWD}" > /dev/null
fi

